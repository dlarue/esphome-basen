substitutions:
  name: basen-bms
  device_description: "Basen BMS test"
  # uart_esp_1
  tx_pin_1: '17'
  rx_pin_1: '16'
  # uart_esp_2
  tx_pin_2: '19'
  rx_pin_2: '18'
  # uart_esp_3
  tx_pin_3: '26'
  rx_pin_3: '25'
  # canbus_esp32_can
  tx_pin_4: '23'
  rx_pin_4: '22'
  # canbus_mcp2515
  spi_mosi_pin: '13'
  spi_miso_pin: '12'
  spi_clk_pin: '14'
  mcp2515_cs_pin: '15'

esphome:
  name: ${name}
  friendly_name: ${name}
  comment: ${device_description}
  min_version: 2025.1.0

esp32:
  board: esp32dev
  framework:
    type: esp-idf

uart:
  - id: uart_esp_1
    tx_pin: ${tx_pin_1}
    rx_pin: ${rx_pin_1}
    baud_rate: 9600
    rx_buffer_size: 512

light:
  # https://esphome.io/components/light/esp32_rmt_led_strip
  # ESP Light used to see the inverter heartbeat
  # Internal : only specifying an id without a name will implicitly set this to true.
  - platform: esp32_rmt_led_strip
    id: esp_light
    rgb_order: GRB
    pin: 4
    num_leds: 1
    # rmt_channel: 0
    chipset: ws2812
    entity_category: config
    default_transition_length: 0ms

# +--------------------------------------+
# | LilyGo T-CAN485 related config       |
# +--------------------------------------+

output:
  # MAX13487E SHDN (enable RS485 chip)
  - platform: gpio
    id: RS485_SE
    pin:
      number: 19
      inverted: true # set HIGH level
  # MAX13487E RE (enable RS485 autodirection)
  - platform: gpio
    id: RS485_EN
    pin:
      number: 17
      inverted: true # set HIGH level
  # RS485 and CAN Boost power supply
  - platform: gpio
    id: CGQ_EN
    pin:
      number: 16
      inverted: true # set HIGH level
  # SN65HVD231DR RS PIN (CAN high speed mode)
  - platform: gpio
    id: CAN_SE
    pin:
      number: 23
      inverted: false # set LOW level

external_components:
  - source:
      type: local
      path: components

wifi:
  id: my_network
  networks:
    - ssid: !secret wifi_ssid
      bssid: !secret wifi_bssid
      password: !secret wifi_password
  domain: !secret domain
  ap:

ota:
  platform: esphome

logger:
  baud_rate: 0
  level: INFO
  #logs:
    #basen_controller: VERY_VERBOSE
    #basen_bms: VERY_VERBOSE
    #scheduler: DEBUG
    #component: DEBUG
    #sensor: DEBUG
    #mqtt: INFO
    #mqtt.idf: INFO
    #mqtt.component: INFO
    #mqtt.sensor: INFO
    #mqtt.switch: INFO
    #api.service: INFO
    #api: INFO

api:

basen_controller:
  - uart_id: uart_esp_1
    id: basen1
    throttle: 5s

packages:
  bms1: !include
      file: basen_bms_main.yaml
      vars:
        basen_bms_address: '0x01'
        basen_bms_id: 'basen_bms1'
        name: '1'

  bms1_params: !include
      file: basen_bms_parameters.yaml
      vars:
        basen_bms_id: 'basen_bms1'
        name: '1'

  bms2: !include
      file: basen_bms_main.yaml
      vars:
        basen_bms_address: '0x02'
        basen_bms_id: 'basen_bms2'
        name: '2'

  bms2_params: !include
      file: basen_bms_parameters.yaml
      vars:
        basen_bms_id: 'basen_bms2'
        name: '2'

  
# +--------------------------------------+
# | Component entities                   |
# +--------------------------------------+

sensor:      
  - platform: debug
    free:
      name: ${name} Heap free
      id: esp32_heap_free
    block:
      name: ${name} Heap max block
      id: esp32_heap_max_block
    loop_time:
      name: ${name} Loop time
      id: esp32_loop_time

text_sensor:
 - platform: debug
   device:
     name: ${name} Device info
     id: esp32_device_info
   reset_reason:
     name: ${name} Reset reason
     id: esp32_reset_reason
    
debug:
  update_interval: 5s
